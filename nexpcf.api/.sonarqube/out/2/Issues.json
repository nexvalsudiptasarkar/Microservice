{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "3.11.0.0",
        "fileVersion": "3.11.0-4.21617.2 (5c216519)",
        "semanticVersion": "3.11.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Worker.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Worker.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 39,
                  "endLine": 24,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/AttendanceSummaryJob.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 27,
                  "endLine": 81,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0649",
          "level": "warning",
          "message": "Field 'AttendanceSummaryManager._logger' is never assigned to, and will always have its default value null",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 42,
                  "endLine": 17,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 4
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 25,
                  "endLine": 49,
                  "endColumn": 168
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 25,
                  "endLine": 53,
                  "endColumn": 166
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 5,
                  "endLine": 65,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/SchedulerManager.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/AttendanceSummaryJob.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/AttendanceSummaryJob.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 17,
                  "endLine": 89,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/Scheduler.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 1,
                  "endLine": 78,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/PCFRestClient.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Worker.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Program.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 18,
                  "endLine": 10,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'sdh' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/SchedulerManager.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 33,
                  "endLine": 11,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'sqldatahelper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 33,
                  "endLine": 16,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'sdh'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/SchedulerManager.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 11,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3459",
          "level": "warning",
          "message": "Remove unassigned field '_logger', or set its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 42,
                  "endLine": 17,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'PCFRestClient' to match pascal case naming rules, consider using 'PcfRestClient'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/PCFRestClient.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field 'UriRfc3986CharsToEscape' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/Utility.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 42,
                  "endLine": 17,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/Disposable.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/Disposable.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/Disposable.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 21,
                  "endLine": 36,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'Disposable' or mark the type as 'sealed'.",
              "1": "'Disposable.Dispose()' should also call 'Dispose(true)'."
            }
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'nex_get_orgs' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/Constant.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 32,
                  "endLine": 5,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'nex_generate_attendance_status' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/Constant.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 32,
                  "endLine": 9,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2223",
          "level": "warning",
          "message": "Change the visibility of 'nex_get_orgs_users' or make it 'const' or 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/Constant.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 32,
                  "endLine": 7,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3963",
          "level": "warning",
          "message": "Initialize all 'static fields' inline and remove the 'static constructor'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/Utility.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 38,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/AttendanceSummaryJob.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 22,
                  "endLine": 30,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/Disposable.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 17,
                  "endLine": 49,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/Disposable.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 13,
                  "endLine": 45,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/Scheduler.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 22,
                  "endLine": 25,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 22,
                  "endLine": 21,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3445",
          "level": "warning",
          "message": "Consider using 'throw;' to preserve the stack trace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/AttendanceSummaryJob.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3445",
          "level": "warning",
          "message": "Consider using 'throw;' to preserve the stack trace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endLine": 60,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/AttendanceSummaryJob.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 22,
                  "endLine": 111,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Jobs/Scheduler.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 22,
                  "endLine": 98,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'producerapilink'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/PCFRestClient.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Utility_Classes/Utility.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 23,
                  "endLine": 119,
                  "endColumn": 141
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'attendata'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Project/NexAEI/nexpcf.api.logger/nexpcf.api/nexpcf.api/Core.Worker/Business/AttendanceSummaryManager.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 29,
                  "endLine": 51,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0649": {
          "id": "CS0649",
          "shortDescription": "Field is never assigned to, and will always have its default value",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0649)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS4014": {
          "id": "CS4014",
          "shortDescription": "Because this call is not awaited, execution of the current method continues before the call is completed",
          "fullDescription": "The current method calls an async method that returns a Task or a Task<TResult> and doesn't apply the await operator to the result. The call to the async method starts an asynchronous task. However, because no await operator is applied, the program continues without waiting for the task to complete. In most cases, that behavior isn't what you expect. Usually other aspects of the calling method depend on the results of the call or, minimally, the called method is expected to complete before you return from the method that contains the call.\u000d\u000a\u000d\u000aAn equally important issue is what happens to exceptions that are raised in the called async method. An exception that's raised in a method that returns a Task or Task<TResult> is stored in the returned task. If you don't await the task or explicitly check for exceptions, the exception is lost. If you await the task, its exception is rethrown.\u000d\u000a\u000d\u000aAs a best practice, you should always await the call.\u000d\u000a\u000d\u000aYou should consider suppressing the warning only if you're sure that you don't want to wait for the asynchronous call to complete and that the called method won't raise any exceptions. In that case, you can suppress the warning by assigning the task result of the call to a variable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS4014)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope",
              "Unnecessary"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S2223": {
          "id": "S2223",
          "shortDescription": "Non-constant static fields should not be visible",
          "fullDescription": "A static field that is neither constant nor read-only is not thread-safe. Correctly accessing these fields from different threads needs synchronization with locks. Improper synchronization may lead to unexpected results, thus publicly visible static fields are best suited for storing non-changing data shared by many consumers. To enforce this intent, these fields should be marked readonly or converted to constants.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2223",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3168": {
          "id": "S3168",
          "shortDescription": "\"async\" methods should not return \"void\"",
          "fullDescription": "An async method with a void return type is a \"fire and forget\" method best reserved for event handlers because there’s no way to wait for the method’s execution to complete and respond accordingly. There’s also no way to catch exceptions thrown from the method.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3168",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3445": {
          "id": "S3445",
          "shortDescription": "Exceptions should not be explicitly rethrown",
          "fullDescription": "When rethrowing an exception, you should do it by simply calling throw; and not throw exc;, because the stack trace is reset with the second syntax, making debugging a lot harder.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3445",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S3459": {
          "id": "S3459",
          "shortDescription": "Unassigned members should be removed",
          "fullDescription": "Fields and auto-properties that are never assigned to hold the default values for their types. They are either pointless code or, more likely, mistakes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3459",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3963": {
          "id": "S3963",
          "shortDescription": "\"static\" fields should be initialized inline",
          "fullDescription": "When a static constructor serves no other purpose that initializing static fields, it comes with an unnecessary performance cost because the compiler generates a check before each static method or instance constructor invocation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3963",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope",
              "Unnecessary"
            ]
          }
        }
      }
    }
  ]
}